# yaml-language-server: $schema=https://lokstra.dev/schema/lokstra.json

server:
  name: user_management_service
  global_setting:
    # Logger Configuration (menggunakan default logger service)
    log_level: "${LOG_LEVEL:info}"           # Options: debug, info, warn, error, fatal
    log_format: json          # Options: text, json (json lebih baik untuk production)
    log_output: stdout        # Options: stdout, stderr, atau path ke file log
    
    # Database dan Flow Configuration
    flow_dbPool: db_global    # Default database pool untuk flow operations
    flow_logger: logger       # Default logger service untuk flow operations
    flow_dbschema: user_management
    
apps:
  - name: "user_management_api"
    address: "${ENV:SERVER_PORT::8081}"
    listener_type: "default"
    router_engine_type: "default"
    
    setting:
      cors: true
      request_timeout: "30s"
      max_request_size: "10MB"
    
    middleware:
      - name: "request_logger"
        enabled: true
        config:
          include_request_body: false
          include_response_body: false
          
      - name: "recovery"
        enabled: true
        config:
          enable_stack_trace: true
          
      - name: "cors"
        enabled: true
        config:
          allowed_origins: ["*"]
          allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS", "PATCH"]
          allowed_headers: ["*"]
          exposed_headers: ["X-Total-Count", "X-Page", "X-Page-Size"]
          allow_credentials: true
          max_age: 3600
          
      - name: "metrics"
        enabled: false        # Disabled until metrics middleware is registered
        config:
          collect_request_metrics: true
          collect_response_metrics: true

    routes:
      - method: "GET"
        path: "/health"
        handler: "health.check"
        
    groups:
      - prefix: "/api/v1"
        middleware:
          - name: "rate_limiter"
            enabled: false      # Disabled until rate_limiter middleware is registered
            config:
              requests_per_minute: 100
              burst: 10
              
        groups:
          # User management endpoints
          - prefix: "/users"
            load_from:
              - users.yaml

          # Authentication endpoints (optional, can be separated to auth service)
          - prefix: "/auth"
            routes:
              - method: "POST"
                path: "/login"
                handler: "auth.login"
                  
              - method: "POST"
                path: "/logout"
                handler: "auth.logout"
                  
              - method: "POST"
                path: "/refresh"
                handler: "auth.refresh"

          # Admin endpoints with additional security
          - prefix: "/admin"
            # middleware:
            #   - name: "auth"
            #     enabled: true
            #     config:
            #       token_type: "bearer"
            #       required_roles: ["admin"]
                  
            groups:
              - prefix: "/users"
                routes:
                  - method: "GET"
                    path: "/stats"
                    handler: "admin.user_stats"
                      
                  - method: "POST"
                    path: "/id/:id/activate"
                    handler: "admin.activate_user"
                      
                  - method: "POST"
                    path: "/id/:id/deactivate"
                    handler: "admin.deactivate_user"
